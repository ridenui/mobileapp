# This is a basic workflow to help you get started with Actions

name: build-ipa

# Controls when the workflow will run
on: [push, workflow_dispatch]

jobs:
  build:
    # Our self hosted runner
    runs-on: eden

    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"

    env:
      LANG: en_US.UTF-8

    steps:
      - name: Configuring Git
        run: |
          git config --global user.name "high5-bot"
          git config --global user.email "me+high5@dunklestoast.de"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.HIGH5_BOT_TOKEN }}

      # Checkout certificates
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.HIGH5_BOT_TOKEN }}
          repository: 'ridenui/certificates'
          path: 'certificates'

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '^13.2.1'

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install yarn
        run: npm i yarn --global

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installing dependencies
        run: yarn

      - uses: ruby/setup-ruby@v1
        env:
          ImageOS: macos11
        with:
          ruby-version: 2.7.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install pods
        run: (cd ios && bundle exec pod install)

      - name: Build app
        run: bundle exec fastlane ios ci

      - name: Branch name with dash
        run: |
          echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Upload ipa as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ipa-${{ env.CURRENT_BRANCH }}
          path: build

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          bundle exec fastlane ios ci_cleanup || true
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision || true


  ota:
    runs-on: ubuntu-latest

    needs: [build]

    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"

    steps:
      - name: Configuring Git
        run: |
          git config --global user.name "high5-bot"
          git config --global user.email "me+high5@dunklestoast.de"

      - name: Branch name with dash
        run: |
          echo "CURRENT_BRANCH_SLASH_LESS=$(echo $GITHUB_REF_NAME | sed 's/\//-/g')" >> $GITHUB_ENV
          echo "CURRENT_BRANCH=$(echo $GITHUB_REF_NAME)" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.HIGH5_BOT_TOKEN }}
          repository: 'ridenui/mobileapp'
          path: 'page'
          ref: 'gh-pages'

      - name: Create ota page
        run: |
          mkdir -p page/ota/$CURRENT_BRANCH
          
          MANIFEST_TEMPLATE="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n          <\!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n          <plist version=\"1.0\">\n          <dict>\n          <key>items</key>\n          <array>\n          <dict>\n          <key>assets</key>\n          <array>\n          <dict>\n          <key>kind</key>\n          <string>software-package</string>\n          <key>url</key>\n          <string>https://ridenui.github.io/mobileapp/ota/$CURRENT_BRANCH/RIDEN.ipa</string>\n          </dict>\n          </array>\n          <key>metadata</key>\n          <dict>\n          <key>bundle-identifier</key>\n          <string>org.ridenui.RIDEN</string>\n          <key>bundle-version</key>\n          <string>1.0</string>\n          <key>kind</key>\n          <string>software</string>\n          <key>title</key>\n          <string>RIDEN</string>\n          </dict>\n          </dict>\n          </array>\n          </dict>\n          </plist>"
          
          echo $MANIFEST_TEMPLATE > page/ota/$CURRENT_BRANCH/ota_manifest.plist

          PAGE_TEMPLATE="
          ---
          tags: 
          - ota
          - $CURRENT_BRANCH
          ---
          # RIDEN: $CURRENT_BRANCH
          
          ### OTA
          
          [Install via OTA](itms-services://?action=download-manifest&url=https://ridenui.github.io/mobileapp/ota/$CURRENT_BRANCH/ota_manifest.plist)
          
          ### IPA
          
          [Download](https://ridenui.github.io/mobileapp/ota/$CURRENT_BRANCH/RIDEN.ipa)
          "
          
          echo $PAGE_TEMPLATE > page/ota/$CURRENT_BRANCH/index.md

      - uses: actions/download-artifact@v2
        with:
          name: ipa-${{ env.CURRENT_BRANCH_SLASH_LESS }}
          path: page/ota/${{ env.GITHUB_REF_NAME }}

      - name: Debug
        run: tree

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: page
          clean: false
          token: ${{ secrets.HIGH5_BOT_TOKEN }}
          git-config-name: high5-bot
          git-config-email: me+high5@dunklestoast.de
